var Koki = function () {
	/* Search Bar ============ */
	var screenWidth = $(window).width();


	var handleSelectPicker = function () {
		if (jQuery('.default-select').length > 0) {
			jQuery('.default-select').selectpicker();
		}
	}

	var handleTheme = function () {
		$('#preloader').fadeOut(1000);
		$('#main-wrapper').addClass('show');

		// menu-toggle in local storage found
		if (window.localStorage.getItem('menu-toggle') === 'close') {
			$('#main-wrapper').addClass('menu-toggle');
			$('.hamburger').addClass('is-active');
		}
		// menu-toggle in local storage not found
		else {
			$('#main-wrapper').removeClass('menu-toggle');
			$('.hamburger').removeClass('is-active');
		}

	}

	var handleMetisMenu = function () {
		if (jQuery('#menu').length > 0) {
			$("#menu").metisMenu();
		}
		jQuery('.metismenu > .mm-active ').each(function () {
			if (!jQuery(this).children('ul').length > 0) {
				jQuery(this).addClass('active-no-child');
			}
		});
	}

	var handleAllChecked = function () {
		$("#checkAll").on('change', function () {
			$("td input:checkbox, .email-list .custom-checkbox input:checkbox").prop('checked', $(this).prop("checked"));
		});
	}

	var handleNavigation = function () {
		$(".nav-control").on('click', function () {

			// set sidebar toggle in local storage
			if ($('#main-wrapper').hasClass('menu-toggle')) {
				window.localStorage.setItem('menu-toggle', 'open');
			} else {
				window.localStorage.setItem('menu-toggle', 'close');
			}

			if ($('#main-wrapper').hasClass('menu-toggle') && $('.hamburger').hasClass('is-active')) {
				$('#main-wrapper').removeClass('menu-toggle');
				$('.hamburger').removeClass('is-active');
			} else {
				$('#main-wrapper').addClass('menu-toggle');
				$('.hamburger').addClass('is-active');
			}
		});
	}

	var handleCurrentActive = function () {
		for (var nk = window.location,
			o = $("ul#menu a").filter(function () {

				return this.href == nk;

			})
				.addClass("mm-active")
				.parent()
				.addClass("mm-active"); ;) {

			if (!o.is("li")) break;

			o = o.parent()
				.addClass("mm-show")
				.parent()
				.addClass("mm-active");
		}
	}

	var handleMiniSidebar = function () {
		$("ul#menu>li").on('click', function () {
			const sidebarStyle = $('body').attr('data-sidebar-style');
			if (sidebarStyle === 'mini') {
				console.log($(this).find('ul'))
				$(this).find('ul').stop()
			}
		})
	}

	var handleMinHeight = function () {
		var win_h = window.outerHeight;
		var win_h = window.outerHeight;
		if (win_h > 0 ? win_h : screen.height) {
			$(".content-body").css("min-height", (win_h + 60) + "px");
		};
	}

	var handleDataAction = function () {
		$('a[data-action="collapse"]').on("click", function (i) {
			i.preventDefault(),
				$(this).closest(".card").find('[data-action="collapse"] i').toggleClass("mdi-arrow-down mdi-arrow-up"),
				$(this).closest(".card").children(".card-body").collapse("toggle");
		});

		$('a[data-action="expand"]').on("click", function (i) {
			i.preventDefault(),
				$(this).closest(".card").find('[data-action="expand"] i').toggleClass("icon-size-actual icon-size-fullscreen"),
				$(this).closest(".card").toggleClass("card-fullscreen");
		});



		$('[data-action="close"]').on("click", function () {
			$(this).closest(".card").removeClass().slideUp("fast");
		});

		$('[data-action="reload"]').on("click", function () {
			var e = $(this);
			e.parents(".card").addClass("card-load"),
				e.parents(".card").append('<div class="card-loader"><i class=" ti-reload rotate-refresh"></div>'),
				setTimeout(function () {
					e.parents(".card").children(".card-loader").remove(),
						e.parents(".card").removeClass("card-load")
				}, 2000)
		});
	}

	var handleHeaderHight = function () {
		const headerHight = $('.header').innerHeight();
		$(window).scroll(function () {
			if ($('body').attr('data-layout') === "horizontal" && $('body').attr('data-header-position') === "static" && $('body').attr('data-sidebar-position') === "fixed")
				$(this.window).scrollTop() >= headerHight ? $('.deznav').addClass('fixed') : $('.deznav').removeClass('fixed')
		});
	}

	var handleDzScroll = function () {
		jQuery('.dz-scroll').each(function () {

			var scroolWidgetId = jQuery(this).attr('id');
			const ps = new PerfectScrollbar('#' + scroolWidgetId, {
				wheelSpeed: 2,
				wheelPropagation: true,
				minScrollbarLength: 20
			});
		})
	}

	var handleMenuTabs = function () {
		if (screenWidth <= 991) {
			jQuery('.menu-tabs .nav-link').on('click', function () {
				if (jQuery(this).hasClass('open')) {
					jQuery(this).removeClass('open');
					jQuery('.fixed-content-box').removeClass('active');
					jQuery('.hamburger').show();
				} else {
					jQuery('.menu-tabs .nav-link').removeClass('open');
					jQuery(this).addClass('open');
					jQuery('.fixed-content-box').addClass('active');
					jQuery('.hamburger').hide();
				}
				//jQuery('.fixed-content-box').toggleClass('active');
			});
			jQuery('.close-fixed-content').on('click', function () {
				jQuery('.fixed-content-box').removeClass('active');
				jQuery('.hamburger').removeClass('is-active');
				jQuery('#main-wrapper').removeClass('menu-toggle');
				jQuery('.hamburger').show();
			});
		}
	}

	var handleChatbox = function () {
		jQuery('.bell-link').on('click', function () {
			jQuery('.chatbox').addClass('active');
		});
		jQuery('.chatbox-close').on('click', function () {
			jQuery('.chatbox').removeClass('active');
		});
	}

	var handlePerfectScrollbar = function () {
		if (jQuery('.deznav-scroll').length > 0) {
			//const qs = new PerfectScrollbar('.deznav-scroll');
			const qs = new PerfectScrollbar('.deznav-scroll');

			qs.isRtl = false;
		}
	}

	var handleBtnNumber = function () {
		$('.btn-number').on('click', function (e) {
			e.preventDefault();

			fieldName = $(this).attr('data-field');
			type = $(this).attr('data-type');
			var input = $("input[name='" + fieldName + "']");
			var currentVal = parseInt(input.val());
			if (!isNaN(currentVal)) {
				if (type == 'minus')
					input.val(currentVal - 1);
				else if (type == 'plus')
					input.val(currentVal + 1);
			} else {
				input.val(0);
			}
		});
	}

	var handleDzChatUser = function () {
		jQuery('.dz-chat-user-box .dz-chat-user').on('click', function () {
			jQuery('.dz-chat-user-box').addClass('d-none');
			jQuery('.dz-chat-history-box').removeClass('d-none');
		});

		jQuery('.dz-chat-history-back').on('click', function () {
			jQuery('.dz-chat-user-box').removeClass('d-none');
			jQuery('.dz-chat-history-box').addClass('d-none');
		});

		jQuery('.dz-fullscreen').on('click', function () {
			jQuery('.dz-fullscreen').toggleClass('active');
		});
	}


	var handleDzFullScreen = function () {
		jQuery('.dz-fullscreen').on('click', function (e) {
			if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement) {
				/* Enter fullscreen */
				if (document.exitFullscreen) {
					document.exitFullscreen();
				} else if (document.msExitFullscreen) {
					document.msExitFullscreen(); /* IE/Edge */
				} else if (document.mozCancelFullScreen) {
					document.mozCancelFullScreen(); /* Firefox */
				} else if (document.webkitExitFullscreen) {
					document.webkitExitFullscreen(); /* Chrome, Safari & Opera */
				}
			}
			else { /* exit fullscreen */
				if (document.documentElement.requestFullscreen) {
					document.documentElement.requestFullscreen();
				} else if (document.documentElement.webkitRequestFullscreen) {
					document.documentElement.webkitRequestFullscreen();
				} else if (document.documentElement.mozRequestFullScreen) {
					document.documentElement.mozRequestFullScreen();
				} else if (document.documentElement.msRequestFullscreen) {
					document.documentElement.msRequestFullscreen();
				}
			}
		});
	}

	var handleshowPass = function () {
		jQuery('.show-pass').on('click', function () {
			jQuery(this).toggleClass('active');
			if (jQuery('#dz-password').attr('type') == 'password') {
				jQuery('#dz-password').attr('type', 'text');
			} else if (jQuery('#dz-password').attr('type') == 'text') {
				jQuery('#dz-password').attr('type', 'password');
			}
		});
	}

	var heartBlast = function () {
		$(".heart").on("click", function () {
			$(this).toggleClass("heart-blast");
		});
	}

	var handleDzLoadMore = function () {
		$(".dz-load-more").on('click', function (e) {
			e.preventDefault();	//STOP default action
			$(this).append(' <i class="fa fa-refresh"></i>');

			var dzLoadMoreUrl = $(this).attr('rel');
			var dzLoadMoreId = $(this).attr('id');

			$.ajax({
				method: "POST",
				url: dzLoadMoreUrl,
				dataType: 'html',
				success: function (data) {
					$("#" + dzLoadMoreId + "Content").append(data);
					$('.dz-load-more i').remove();
				}
			})
		});
	}

	/* Function ============ */
	return {
		init: function () {
			handleTheme();
			handleMetisMenu();
			handleAllChecked();
			handleNavigation();
			handleCurrentActive();
			handleMiniSidebar();
			handleMinHeight();
			handleDataAction();
			handleHeaderHight();
			handleDzScroll();
			handleMenuTabs();
			handleChatbox();
			handlePerfectScrollbar();
			handleBtnNumber();
			handleDzChatUser();
			handleDzFullScreen();
			handleshowPass();
			heartBlast();
			handleDzLoadMore();

		},


		load: function () {
			handleTheme();
			handleSelectPicker();
		},

		resize: function () {


		}
	}

}();

/* Document.ready Start */
jQuery(document).ready(function () {
	$('[data-toggle="popover"]').popover();
	'use strict';
	Koki.init();

});
/* Document.ready END */

/* Window Load START */
jQuery(window).on('load', function () {
	'use strict';
	Koki.load();

});
/*  Window Load END */
/* Window Resize START */
jQuery(window).on('resize', function () {
	'use strict';
	Koki.resize();
});
/*  Window Resize END */



function errorMessageAlert(message) {
	Swal.fire(
		'Oops...',
		message.replace(/\n/g, "<br />"),
		'error'
	)
}

function successMessageAlert(message) {
	Swal.fire(
		'Success',
		message.replace(/\n/g, "<br />"),
		'success'
	)
}



function successMessage(message, position = 'top-right', timeOut = 3000) {
	Swal.fire({
		icon: 'success',
		title: message.replace(/\n/g, "<br />"),
		toast: true,
		position: position,
		iconColor: 'white',
		customClass: {
			popup: 'colored-toast'
		},
		showConfirmButton: false,
		timer: timeOut,
		timerProgressBar: true,
		didOpen: (toast) => {
			toast.addEventListener('mouseenter', Swal.stopTimer)
			toast.addEventListener('mouseleave', Swal.resumeTimer)
		}
	})
}

function errorMessage(message, position = 'top-right', timeOut = 3000) {
	Swal.fire({
		icon: 'error',
		title: message.replace(/\n/g, "<br />"),
		toast: true,
		position: position,
		iconColor: 'white',
		customClass: {
			popup: 'colored-toast'
		},
		showConfirmButton: false,
		timer: timeOut,
		timerProgressBar: true,
		didOpen: (toast) => {
			toast.addEventListener('mouseenter', Swal.stopTimer)
			toast.addEventListener('mouseleave', Swal.resumeTimer)
		}
	})
}

function calling_ajax(url, form_id, button = null, btn_processing = null) {
	do_ajax(url, '#' + form_id, button, btn_processing);
}

function do_ajax(url, form_id = null, button = null, btn_processing = null, success_alert = 'sweet', error_alert = 'sweet') {

	if (btn_processing != null)
		var old_text = $(button).html();
	if (form_id != null) {
		$.ajax({
			type: "POST",
			url: url,
			data: new FormData($(form_id)[0]),
			processData: false,
			contentType: false,
			beforeSend: function () {
				$(button).prop('disabled', true);
				if (btn_processing != null)
					$(button).html('<span>Processing...</span>');
			},
			success: function (data) {

				if (data.remove_parent_element)
					$(button).parent(data.remove_parent_element).remove()

				if (data.remove_closest_element)
					$(button).closest(data.remove_closest_element).remove()

				if (data.remove_current_element)
					$(button).remove()

				if (data.error == false) {
					if (data.message != false) {
						if (success_alert == 'sweet')
							successMessageAlert(data.message);
						else
							successMessage(data.message);
					}
				} else {
					if (data.message != false) {
						if (error_alert == 'sweet')
							errorMessageAlert(data.message);
						else
							errorMessage(data.message);
					}
				}
				if (data.redirect) {
					setTimeout(() => {
						data.target ? (window.open(data.redirect, data.target ? data.target : '_self')) : (window.location.replace(data.redirect));

					}, data.redirect_time ? data.redirect_time : 700);
				}
				if (data.reload) {

					setTimeout(() => {
						location.reload();
					}, data.reload_time ? data.reload_time : 700);
				}
			},
			error: function (request, status, error) {
				if (error_alert == 'sweet') {
					errorMessageAlert(request.responseText);
				} else {
					errorMessage(request.responseText);
				}
			},
			complete: function () {
				$(button).prop('disabled', false);
				if (btn_processing != null)
					$(button).html(old_text);

				$('#preloader').fadeOut(100);
			}
		});
	} else {
		$.ajax({
			type: "POST",
			url: url,
			data: {},
			processData: false,
			contentType: false,
			beforeSend: function () {
				$(button).prop('disabled', true);
				if (btn_processing != null)
					$(button).html('<span>Processing...</span>');
			},
			success: function (data) {

				if (data.remove_parent_element)
					$(button).parent(data.remove_parent_element).remove()

				if (data.remove_closest_element)
					$(button).closest(data.remove_closest_element).remove()

				if (data.remove_current_element)
					$(button).remove()

				if (data.error == false) {
					if (data.message != false) {
						if (success_alert == 'sweet')
							successMessageAlert(data.message);
						else
							successMessage(data.message);
					}
				} else {
					if (data.message != false) {
						if (error_alert == 'sweet')
							errorMessageAlert(data.message);
						else
							errorMessage(data.message);
					}
				}
				if (data.redirect) {
					setTimeout(() => {
						data.target ? (window.open(data.redirect, data.target ? data.target : '_self')) : (window.location.replace(data.redirect));
					}, data.redirect_time ? data.redirect_time : 700);
				}
				if (data.reload) {

					setTimeout(() => {
						location.reload();
					}, data.reload_time ? data.reload_time : 700);
				}
			},
			error: function (request, status, error) {
				if (error_alert == 'sweet') {
					errorMessageAlert(request.responseText);
				} else {
					errorMessage(request.responseText);
				}
			},
			complete: function () {
				$(button).prop('disabled', false);
				if (btn_processing != null)
					$(button).html(old_text);

				$('#preloader').fadeOut(100);
			}
		});
	}
}

$('form button').on('click', function (e) {

	var form_btn_id = $(this).parents('form').attr('data-form-btn-id');
	console.log(form_btn_id);
	console.log(this.id);
	var form_id = $(this).parents('form').attr('id');
	var form_url = $(this).parents('form').attr('action') ? $(this).parents('form').attr('action') : current_url;
	var form_btn = $(this).parents('form').attr('data-form-btn') ? null : true;
	if (form_id) {

		if (form_btn_id == undefined) {
			e.preventDefault();
			if ($(e.target).is(':submit:disabled'))
				return false;

			if (form_id == 'deleteForm') {
				calling_ajax($(this).attr('data-delete-url'), form_id, this, form_btn);
			} else if (form_id) {
				calling_ajax(form_url, form_id, this, form_btn)
			}
		} else if (form_btn_id == this.id) {
			e.preventDefault();
			if ($(e.target).is(':submit:disabled'))
				return false;

			if (form_id == 'deleteForm') {
				calling_ajax($(this).attr('data-delete-url'), form_id, this, form_btn);
			} else if (form_id) {
				calling_ajax(form_url, form_id, this, form_btn)
			}

		}
	}
});

function convertToSlug(Text) {
	return Text.toLowerCase()
		.replace(/[^\w ]+/g, '')
		.replace(/ +/g, '-');
}



function is_image(image) {
	var fileExtension = ['jpeg', 'jpg', 'gif', 'png'];
	if ($.inArray(image.split('.').pop().toLowerCase(), fileExtension) == -1) {
		$('#multi-file-upload-ajax').val('');
		return false;
	}
	return true
}


function readURL(input) {
	if (input.files && input.files[0]) {


		var reader = new FileReader();
		reader.onload = function (e) {
			$('#imagePreview').css('background-image', 'url(' + e.target.result + ')');
			$('#imagePreview').hide();
			$('#imagePreview').fadeIn(100);

			$(input).parent().parent().find('.imagePreview').css('background-image', 'url(' + e.target.result + ')').hide().fadeIn(100);
		}
		reader.readAsDataURL(input.files[0]);
	}
}

$('#imageUpload').change(function () {
	readURL(this);
});

$('.imageUpload').change(function () {
	readURL(this);
});


$('input[name=title]').on('keyup', function () {
	$('input[name=slug]').val(convertToSlug($(this).val()));
})

$(document).ready(function () {
	if ($('.summernote_description').length > 0) {
		// add css link to head
		$('.summernote_description').summernote({
			placeholder: 'Write your description here...',
			tabsize: 2,
			height: 500,
			callbacks: {
				onImageUpload: function (files, editor, $editable) {
					$('#preloader').show();
					sendFile(files[0], editor, $editable);
				}
			}
		});
	}
});


function sendFile(file, editor, welEditable) {
	data = new FormData();
	data.append("image", file);
	data.append("type", 'summernote');
	$.ajax({
		data: data,
		type: "POST",
		url: `${admin_panel_url}/contents/upload_image`,
		cache: false,
		contentType: false,
		processData: false,
		beforeSend: function () {
			$('#preloader').show();
		},
		success: function (data) {
			if (data.error == false) {
				if (data.message != false) {
					successMessageAlert(data.message);
					$('.summernote_description').summernote("insertImage", data.response.image_url, 'filename');
				}
			} else {
				if (data.message != false) {
					errorMessageAlert(data.message);
				}
			}
		},
		error: function (request, status, error) {
			errorMessageAlert(request.responseText);
		},
		complete: function () {
			$('#preloader').hide();
		}
	});
}

$('.delete-item').on('click', function (e) {
	e.preventDefault();

	Swal.fire({
		title: 'Are you sure?',
		text: "You won't be able to revert this!",
		icon: 'warning',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yes, do it!'
	}).then((result) => {
		if (result.value) {
			$('#preloader').show();
			var url = $(this).attr('href');
			do_ajax(url);
		}
	})
});


$('.resend-email').on('click', function (e) {
	e.preventDefault();

	Swal.fire({
		title: 'Are you sure?',
		text: "You want to send email to this user?",
		icon: 'warning',
		showCancelButton: true,
		confirmButtonColor: '#3085d6',
		cancelButtonColor: '#d33',
		confirmButtonText: 'Yes, send it!'
	}).then((result) => {
		if (result.value) {
			$('#preloader').show();
			var url = $(this).attr('href');
			do_ajax(url);
		}
	})
});

// if name="is_paid" changed then show or hide price and discount fields
$(document).on('change', 'select[name="is_paid"]', function () {
	if ($('select[name="is_paid"]').val() == 1) {
		$('input[name="price"]').parent().show();
		$('input[name="discount"]').parent().show();
	} else {
		$('input[name="price"]').parent().hide();
		$('input[name="discount"]').parent().hide();
		$('input[name="price"]').val(0);
		$('input[name="discount"]').val(0.00);
	}
});

// if name="discount" changed then calculate price on the basis of discount percentage
$(document).on('keyup', 'input[name="discount"]', function () {
	if ($(this).val() > 100) {
		$(this).val(99.99);
	}

	var price = $('input[name="price"]').val();
	var discount = $('input[name="discount"]').val();
	var discounted_price = price - (price * discount / 100);
	$(this).parent().find('small').html('Discounted Price: ' + discounted_price.toFixed(2));
});